- hosts: all
  become: true
  tasks:
  - name: Install yum packages for HTTPS transport
    yum:
      name: "{{ packages }}"
      state: latest
      update_cache: yes
    vars:
      packages:
      - yum-utils
      - device-mapper-persistent-data
      - lvm2

  - name: Add Docker repo
    get_url:
      url: https://download.docker.com/linux/centos/docker-ce.repo
      dest: /etc/yum.repos.d/docer-ce.repo
  - name: Enable Docker Edge repo
    ini_file:
      dest: /etc/yum.repos.d/docer-ce.repo
      section: 'docker-ce-edge'
      option: enabled
      value: 0

  - name: Enable Docker Test repo
    ini_file:
      dest: /etc/yum.repos.d/docer-ce.repo
      section: 'docker-ce-test'
      option: enabled
      value: 0


  - name: Install docker and its dependecies
    yum: 
      name: "{{ packages }}"
      state: latest
      update_cache: yes
    vars:
      packages:
      - containerd.io
      - docker-ce 
      - docker-ce-cli 
    notify:
      - docker status

  - name: Add vagrant user to docker group
    user:
      name: vagrant
      group: docker

  - name: Remove swapfile from /etc/fstab
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none

  - name: Disable swap for kubelet
    command: swapoff -a
    when: ansible_swaptotal_mb > 0

  - name: Add an signing key for Kubernetes
    rpm_key:
      key: https://packages.cloud.google.com/yum/doc/yum-key.gpg
      state: present

  - name: add YUM repo
    yum_repository:
      name: Kubernetes
      description: Kubernetes YUM repository
      baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
      gpgkey: https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
      gpgcheck: yes

  - name: Install Kubernetes binaries
    yum: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
        - kubelet 
        - kubeadm 
        - kubectl

  - name: Configure node ip
    lineinfile:
      path: /etc/sysconfig/kubelet
      line: KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}

  - name: enable kubelet
    command: systemctl enable kubelet.service

  - name: Restart kubelet
    service:
      name: kubelet
      daemon_reload: yes
      state: restarted
  
  - name: enable docker
    command: systemctl enable docker.service
  
  - name: Restart docker
    service:
      name: docker
      daemon_reload: yes
      state: restarted
  
  - name: update kernel settings
    become: yes
    sysctl:
      name: net.bridge.bridge-nf-call-iptables
      value: 1
      sysctl_set: yes
      state: present
      reload: yes

  - name: init the k8s cluster
    command: kubeadm init --apiserver-advertise-address="192.168.10.10" --apiserver-cert-extra-sans="192.168.10.10"  --node-name master --pod-network-cidr=192.168.0.0/16
  
  - name: Setup kubeconfig for vagrant user
    command: "{{ item }}"
    with_items:
     - mkdir -p /home/vagrant/.kube
     - cp -i /etc/kubernetes/admin.conf /home/vagrant/.kube/config
     - chown vagrant:vagrant /home/vagrant/.kube/config
     
  - name: Install calico as network provider
    become: false
    command: kubectl apply -f https://docs.projectcalico.org/v3.9/manifests/calico.yaml
  
  - name: Generate join command
    command: kubeadm token create --print-join-command
    register: join_command

  - name: Copy join command to local file
    local_action: copy content="{{ join_command.stdout_lines[0] }}" dest="./join-command"
  
  handlers:
    - name: docker status
      service: name=docker state=started